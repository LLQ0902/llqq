<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
						http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
						http://www.springframework.org/schema/context
          				http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	<!-- 配置springmvc放行静态资源文件(html/css/js/图片等)
		配置完后, 再去访问当前项目中的静态资源文件, 就不会再匹配
		Controller方法, 不会被拦截, 而是直接到指定路径下寻找相应的
		静态资源文件(静态资源文件就可以访问了)
	 -->
	<mvc:default-servlet-handler/>
	
	<!-- 配置识别注解驱动: 
		@Controller/@Service/@Component
	 -->
	<mvc:annotation-driven />
	
	<!-- 配置需要扫描的包: 
		spring容器会扫描这个包下的所有类, 会将扫描到的类
		(并且类上还有@Controller/@Service/@Component注解)
		注册到spring容器中, 由spring容器负责创建对象
	 -->
	<context:component-scan 
		base-package="com.tedu.controller">
	</context:component-scan>
	
	<!-- 配置内部资源视图解析器
		/WEB-INF/pages/home.jsp
	 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix"  value="/WEB-INF/pages/"/>
		<property name="suffix"  value=".jsp"/>
	</bean>
	
	
</beans>




